{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/cart-slice.js","store/ui-slice.js","store/store.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","index.js"],"names":["module","exports","cartSlice","createSlice","name","initialState","items","totalQuantity","isChanged","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","replaceCartItems","cart","cartReducer","reducer","cartActions","actions","uiSlice","showCart","notification","showCartHanlder","showNotification","status","message","uiAction","store","configureStore","ui","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","useSelector","map","CartButton","button","badge","MainHeader","header","Layout","ProductItem","description","dummy_products","Products","products","product","Notification","specialClasses","error","success","cssClasses","App","useEffect","a","fetchData","fetch","response","ok","Error","json","data","sendData","method","body","JSON","stringify","sendCartData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72c021bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3kL01\",\"details\":\"CartItem_details__3heQ6\",\"quantity\":\"CartItem_quantity__OThe7\",\"price\":\"CartItem_price__2LLzl\",\"itemprice\":\"CartItem_itemprice__Isl0a\",\"actions\":\"CartItem_actions__3YtrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__1VdTZ\",\"price\":\"ProductItem_price__2SAus\",\"actions\":\"ProductItem_actions__KOcvT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3sHVh\",\"error\":\"Notification_error__21CwJ\",\"success\":\"Notification_success__2Nl-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__qQAPg\",\"badge\":\"CartButton_badge__1BVnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1P61W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2w_vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__Ky7j8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__20qvD\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { items: [], totalQuantity: 0, isChanged: false };\r\nconst cartSlice = createSlice({\r\n  name: \"cartSlice\",\r\n  initialState,\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.isChanged = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      state.totalQuantity--;\r\n      const id = action.payload;\r\n      state.isChanged = true;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n    replaceCartItems(state, action) {\r\n      const cart = action.payload;\r\n      state.items = cart.items;\r\n      state.totalQuantity = cart.totalQuantity;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartReducer = cartSlice.reducer;\r\nexport const cartActions = cartSlice.actions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = { showCart: false, notification: null };\r\nconst uiSlice = createSlice({\r\n  name: \"uiSlice\",\r\n  initialState,\r\n  reducers: {\r\n    showCartHanlder(state) {\r\n      state.showCart = !state.showCart;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        title: action.payload.title,\r\n        status: action.payload.status,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n  return async (dispatch) => {};\r\n};\r\n\r\nexport const uiAction = uiSlice.actions;\r\nexport default uiSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cartReducer } from \"./cart-slice\";\r\nimport uiSlice from \"./ui-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice, cart: cartReducer },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price, id } = props.item;\n\n  const removeFromCart = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  const addItemToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, name: title, price, quantity }));\n  };\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{\" \"}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={removeFromCart}>-</button>\n          <button onClick={addItemToCartHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = () => {\n  const items = useSelector((state) => state.cart.items);\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {items.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              name: item.name,\n              price: item.price,\n              quantity: item.quantity,\n              total: item.totalPrice,\n            }}\n          />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from \"./CartButton.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiAction } from \"../../store/ui-slice\";\n\nconst CartButton = (props) => {\n  const totalQuantity = useSelector((state) => state.cart.totalQuantity);\n  const dispatch = useDispatch();\n  const showCartHandler = () => {\n    dispatch(uiAction.showCartHanlder());\n  };\n  return (\n    <button className={classes.button} onClick={showCartHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from \"react\";\nimport MainHeader from \"./MainHeader\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, price, description, id } = props;\n\n  const addItemToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ id: id, name: title, price: price }));\n  };\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst dummy_products = [\n  {\n    id: \"a1\",\n    title: \"Machine Racket\",\n    description: \"The Best Machine Racket Out there!\",\n    price: 8,\n  },\n  {\n    id: \"a2\",\n    title: \"IMax XX\",\n    description: \"An extraordinary motor!\",\n    price: 10,\n  },\n  {\n    id: \"a3\",\n    title: \"Xl 25 Max\",\n    description: \"An exeptional Creature\",\n    price: 12,\n  },\n];\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {dummy_products.map((product) => (\n          <ProductItem\n            id={product.id}\n            key={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = \"\";\r\n\r\n  if (props.status === \"error\") {\r\n    specialClasses = classes.error;\r\n  }\r\n  if (props.status === \"success\") {\r\n    specialClasses = classes.success;\r\n  }\r\n\r\n  const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\n\nlet initialState = true;\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.showCart);\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (initialState) {\n      initialState = false;\n      return;\n    }\n    if (cart.isChanged) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import { uiAction } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://dummyproject-61f36-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Fetching cart data failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const data = await fetchData();\r\n      dispatch(\r\n        cartActions.replaceCartItems({\r\n          items: data.items || [],\r\n          totalQuantity: data.totalQuantity,\r\n        })\r\n      );\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          title: \"Succes\",\r\n          status: \"success\",\r\n          message: \"Cart data fetched Successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          title: \"Error\",\r\n          status: \"error\",\r\n          message: \"fetching cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiAction.showNotification({\r\n        title: \"pending...\",\r\n        status: \"sending\",\r\n        message: \"sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendData = async () => {\r\n      const response = await fetch(\r\n        \"https://dummyproject-61f36-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"send cart data failed!\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendData();\r\n\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          title: \"Succes\",\r\n          status: \"success\",\r\n          message: \"Cart Data Send Successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiAction.showNotification({\r\n          title: \"Error\",\r\n          status: \"error\",\r\n          message: \"sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}